ext.versionFile = file('version.properties')

task loadVersion {
    logger.quiet "exec loadVersion task"
    version = readVersion()
}

ProjectVersion readVersion() {
    logger.quiet "Reading the version file."

    if (!versionFile.exists()) {
        throw new GradleException("Requiredi version file does not exist: $versionFile.canonicalPath")
    }

    Properties versionProps = new Properties()
    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }

    new ProjectVersion(maj: versionProps.major.toInteger(), min: versionProps.minor.toInteger(),
            prodReady: versionProps.release.toBoolean())
}

task printVersion(group: "versioning", description: "Prints project version.") {
    doLast {
        logger.quiet "Version: $version"
    }
}

class ReleaseVersionTask extends DefaultTask {
    @Input Boolean release
    @OutputFile File destFile

    ReleaseVersionTask() {
        group = "versioning"
        description = "Makes project a release version."
    }

    @TaskAction
    void start() {
        project.version.release = true
        ant.propertyfile(file: destFile) {
            entry(key: 'release', type: 'string', operation: '=', value: 'true')
        }

    }
}

class ProjectVersion {
    Integer maj
    Integer min
    Boolean prodReady

    @Override
    String toString() {
        "$maj.$min${prodReady ? '' : '-SNAPSHOT'}"
    }
}
